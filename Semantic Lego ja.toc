\contentsline {section}{\numberline {1}導入}{6}
\contentsline {subsection}{\numberline {1.1} ADT（抽象データ型）としての言語}{6}
\contentsline {subsection}{\numberline {1.2}単層（monolithic）インタプリタ}{9}
\contentsline {subsection}{\numberline {1.3}部品的（modular）インタプリタ}{9}
\contentsline {subsubsection}{\numberline {1.3.1}インタプリタの持ち上げ（lifting）}{11}
\contentsline {subsubsection}{\numberline {1.3.2}多階層（stratified）インタプリタ}{12}
\contentsline {subsection}{\numberline {1.4}例示}{14}
\contentsline {subsection}{\numberline {1.5}あるschemeに似た言語}{16}
\contentsline {subsubsection}{\numberline {1.5.1}非決定性（nondeterministic）と継続（continuation）}{16}
\contentsline {subsubsection}{\numberline {1.5.2}単一化された、パラメータによって指定されるシステム（Unified system of parametrization）}{20}
\contentsline {subsubsection}{\numberline {1.5.3}再開機能（Resumption）}{20}
\contentsline {section}{\numberline {2} モナド（Monads）}{21}
\contentsline {subsection}{\numberline {2.1}基本的な圏論}{21}
\contentsline {subsubsection}{\numberline {2.1.1} 圏 }{21}
\contentsline {subsubsection}{\numberline {2.1.2} 関手 }{21}
\contentsline {subsubsection}{\numberline {2.1.3} 自然変換 }{21}
\contentsline {subsubsection}{\numberline {2.1.4} 始対象の性質（initiality）}{21}
\contentsline {subsubsection}{\numberline {2.1.5} 双対性 }{21}
\contentsline {subsubsection}{\numberline {2.1.6} 圏論と関数型プログラミング }{21}
\contentsline {subsubsection}{\numberline {2.1.7} 参照 }{21}
\contentsline {subsection}{\numberline {2.2} モナド }{21}
\contentsline {subsubsection}{\numberline {2.2.1} 初段階目の形式化 }{21}
\contentsline {subsubsection}{\numberline {2.2.2} 二段階目の形式化 }{21}
\contentsline {subsubsection}{\numberline {2.2.3} 解釈 }{21}
\contentsline {subsection}{\numberline {2.3} モナド射（monad morphism） }{23}
\contentsline {subsection}{\numberline {2.4} 組み合わせないモナド }{23}
\contentsline {subsection}{\numberline {2.5} 組み合せたモナド }{23}
\contentsline {subsection}{\numberline {2.6} モナド変換子（monad transformers） }{23}
\contentsline {subsubsection}{\numberline {2.6.1} 動機 }{23}
\contentsline {subsubsection}{\numberline {2.6.2} 形式化 }{24}
\contentsline {subsubsection}{\numberline {2.6.3} モナド変換子のクラス }{24}
\contentsline {subsubsection}{\numberline {2.6.4} モナド変換子の組み合わせ }{24}
\contentsline {section}{\numberline {3} 持ち上げ（lifting）}{25}
\contentsline {subsection}{\numberline {3.1} 持ち上げ（lifting） }{25}
\contentsline {subsubsection}{\numberline {3.1.1} 形式的持ち上げ }{25}
\contentsline {subsubsection}{\numberline {3.1.2} モナドと持ち上げ }{25}
\contentsline {subsection}{\numberline {3.2} 語用論（pragmatics） }{25}
\contentsline {subsubsection}{\numberline {3.2.1} 上昇型（bottom-up） }{25}
\contentsline {subsubsection}{\numberline {3.2.2} 下降型（top-down） }{25}
\contentsline {section}{\numberline {4} 多階層性（stratification）}{26}
\contentsline {subsection}{\numberline {4.1} 多階層モナド（stratified monads） }{26}
\contentsline {subsection}{\numberline {4.2} 多階層モナド変換子（stratified monad transformers） }{26}
\contentsline {subsubsection}{\numberline {4.2.1} 頂変換子（top transformers） }{26}
\contentsline {subsubsection}{\numberline {4.2.2} 底変換子（bottom transformers） }{26}
\contentsline {subsubsection}{\numberline {4.2.3} 周辺変換子（around transformers） }{26}
\contentsline {subsubsection}{\numberline {4.2.4} 継続変換子（continuation transformers） }{26}
\contentsline {subsection}{\numberline {4.3} 計算ADT }{26}
\contentsline {subsection}{\numberline {4.4} 言語ADT }{26}
\contentsline {section}{\numberline {5} 結論 }{27}
\contentsline {subsection}{\numberline {5.1} 持ち上げ 対 多階層性 }{27}
\contentsline {subsection}{\numberline {5.2} 極限 }{27}
\contentsline {subsection}{\numberline {5.3} 関連事項 }{27}
\contentsline {subsection}{\numberline {5.4} 将来的事項 }{27}
\contentsline {subsection}{\numberline {5.5} 結論 }{27}
\contentsline {section}{\numberline {A} 雑録 }{28}
\contentsline {subsection}{\numberline {A-1} なぜschemeか }{28}
\contentsline {subsection}{\numberline {A-2} 型についての重要な点 }{28}
\contentsline {subsection}{\numberline {A-3} 型付きの値 対 型無しの値 }{28}
\contentsline {subsection}{\numberline {A-4} 拡張可能な和と積 }{28}
\contentsline {section}{\numberline {B}コード}{29}
\contentsline {subsection}{\numberline {B-1} モナド変換子の定義 }{29}
\contentsline {section}{\numberline {C}参考文献}{38}
