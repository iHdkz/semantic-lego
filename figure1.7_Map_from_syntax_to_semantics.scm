(define (D exp)
  (cond ((number? exp) (%num exp))
	((variable? exp) (%var exp))
	((lambda? exp)
	 (%lambda (lambda-variable exp)
		  (D (lambda-body exp))))
	((if? exp)
	 (%if (D (if-condition exp))
	      (D (if-consequent exp))
	      (D (if-alternative exp))))
	((+? exp)
	 (%* (D (op-arg1 exp))
	     (D (op-arg2 exp))))
	((*? exp)
	 (%* (D (op-arg1 exp))
	     (D (op-arg2 exp))))
	(else
	  (%call (D (call-operator exp))
		 (D (call-operand exp))))))
